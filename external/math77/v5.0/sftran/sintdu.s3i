      SUBROUTINE SINTDU
num73(999999)
noindent
C     .  Copyright (C) 1989, California Institute of Technology.
C     .  All rights reserved.  U. S. Government sponsorship under
C     .  NASA contract NAS7-918 is acknowledged.
c>> 1994-10-19 SINTDU  Krogh  Changes to use M77CON
c>> 1994-08-19 SINTDU  Snyder correct "middle" that's really at alocal
c>> 1994-07-07 SINTDU  Snyder set up for CHGTYP.
C>> 1993-05-18 SINTDU  Krogh -- Changed "END" to "END PROGRAM"
C>> 1987-11-20 SINTDU Snyder  Initial code.
C
C     THIS SUBROUTINE UPDATES DIFFERENCE LINES FOR SINTA DURING
C     THE SEARCHES.
c
c--S replaces "?": ?INTA, ?intc, ?INTDU, ?intec
C
C     *****     INTERNAL AND COMMON VARIABLES   ************************
C
C EPSCOR  IS A CORRECTION TO BE ADDED ONTO EPSMIN.
      REAL             EPSCOR
C FATA    THE FUNCTION VALUE AT THE ALOCAL END OF THE INTERVAL.
C FATB    THE FUNCTION VALUE AT THE BLOCAL END OF THE INTERVAL.
      REAL             FATA,FATB
C PHIT    IS THE BACKWARD DIFFERENCE LINE.
      REAL             PHIT(17)
C
C     *****    COMMON STORAGE ******************************************
C
include (sintc)
C
include (sintec)
C
C     *****    EQUIVALENCE STATEMENTS    *******************************
C
      EQUIVALENCE (PHI(18),PHIT)
      EQUIVALENCE (FAT(1),FATA), (FAT(2),FATB)
indent
C
C     *****    PROCEDURES     ******************************************
C
      IF (WHERE-5) 200,40,10
C
C     UPDATE BY ADDING A FUNCTION VALUE IN THE MIDDLE.
C
10    HAVDIF=.FALSE.
      IF (NFEVAL.GT.NFJUMP+6) THEN
         if (l .le. 0) go to 70
         WHERE=0
         L=MIN(L,LENDT+1)
         IF (L.GE.LENDT+1) GO TO 180
         I=LENDT
         EPSCOR=0.5e0*(-ABS(XT(L-1)*(FT(L)-FT(L-1)))
     1   +ABS(XT(L-1)*(FNCVAL-FT(L-1)))+ABS(X*(FT(L)-FNCVAL)))
         EPSCOR=EPSCOR*EMEPS
         EPSCOR=EPSCOR+ABS(FNCVAL*RNDC*(XT(L)-XT(L-1)))
         IF (FEA.NE.0) EPSCOR=EPSCOR+ABS(0.5e0*ERRF*(XT(L)-XT(L-1)))
         EPSMIN=EPSMIN+MAX(EPSCOR,0.0E0)
         DO FOREVER
            XT(I+1)=XT(I)
            FT(I+1)=FT(I)
            IF (I.EQ.L) GO TO 180
            I=I-1
         END FOREVER
      END IF
      IF (L-LENDT-1) 80,50,50
C
C     UPDATE BY ADDING A FUNCTION VALUE ON THE BLOCAL END.
C
40    IF (WHERE2.EQ.1) GO TO 70
      FNCVAL=FATB
      L=LENDT+1
C     ADD ONE AT THE BLOCAL END
50    PHIT(L)=FNCVAL
      TP=1.0e0
      PHIT(LENDT)=FNCVAL-PHIT(LENDT)
      I=LENDT
60       TP=TP*((X-XT(I))/(XT(LENDT)-XT(I-1)))
         PHIT(I-1)=PHIT(I)-TP*PHIT(I-1)
         I=I-1
      IF (I.GE.2) GO TO 60
      GO TO 140
C
C     UPDATE BY ADDING A FUNCTION VALUE ON THE ALOCAL END.
C
70    FNCVAL=FATA
      L=1
C     ADD ONE IN THE MIDDLE OR AT THE ALOCAL END.
80    I=LENDT
      TP=PHIT(I)-FNCVAL
      S=XT(I)-X
      DO FOREVER
         XT(I+1)=XT(I)
         FT(I+1)=FT(I)
         PHIT(I+1)=PHIT(I)
         PHI(I+1)=PHI(I)
         I=I-1
         IF (I.LT.L) EXIT FOREVER
         TP=TP+(S/(X-XT(I)))*(TP-PHIT(I))
      END FOREVER
      PHIT(L)=TP
      IF (L.EQ.1) THEN
C        ADD ONE AT THE ALOCAL END.
         PHI(1)=FNCVAL
         TP=1.0e0
         PHI(2)=FNCVAL-PHI(2)
         I=2
110         TP=TP*((X-XT(I))/(XT(1)-XT(I+1)))
            PHI(I+1)=PHI(I)-TP*PHI(I+1)
            I=I+1
         IF (I.LE.LENDT) GO TO 110
         GO TO 180
      END IF
C     UPDATE PHIT FOR ADDING ONE IN THE INTERIOR.
      I=L-1
130      PHIT(I)=PHIT(I+1)+(S/(X-XT(I)))*(PHIT(I+1)-PHIT(I))
         I=I-1
      IF (I.GT.0) GO TO 130
C     UPDATE PHI FOR ADDING ONE IN THE INTERIOR OR AT THE BLOCAL END.
140   TP=PHI(1)-FNCVAL
      S=XT(1)-X
      I=2
      IF (L.NE.2) THEN
150         TP=TP+(S/(X-XT(I)))*(TP-PHI(I))
            I=I+1
         IF (I.LT.L) GO TO 150
      END IF
      PHI(L)=TP
      IF (L.NE.LENDT+1) THEN
C        I = L AT THIS TIME.
170         PHI(I+1)=PHI(I)+(S/(X-XT(I+1)))*(PHI(I)-PHI(I+1))
            I=I+1
         IF (I.LE.LENDT) GO TO 170
      END IF
180   LENDT=LENDT+1
      XT(L)=X
      FT(L)=FNCVAL
      IF (J1OLD.NE.18) THEN
         IF (J1OLD.GE.L) J1OLD=J1OLD+1
      END IF
      IF (J2OLD.GE.L) J2OLD=J2OLD+1
      IF (WHERE.NE.0) GO TO 230
C
C     REFORM THE DIFFERENCE LINES.
C
200   NFJUMP=NFEVAL
      PHI(1)=FT(1)
      PHIT(1)=FT(2)-FT(1)
      PHI(2)=-PHIT(1)
      PHIT(2)=FT(2)
      DO FOR J=3,LENDT
         TP=1.0e0
         S=1.0e0
         PHIT(J)=FT(J)
         DO FOR I=3,J
            PHIT(J-I+2)=PHIT(J-I+3)-TP*PHIT(J-I+2)
            TP=TP*((XT(J)-XT(J-I+2))/(XT(J-1)-XT(J-I+1)))
            S=S*((XT(1)-XT(J-I+2))/(XT(J)-XT(J-I+2)))
         END FOR
         PHIT(1)=PHIT(2)-TP*PHIT(1)
         PHI(J)=-S*PHIT(1)
      END FOR
C
230   CONTINUE
      RETURN
C
      END PROGRAM
