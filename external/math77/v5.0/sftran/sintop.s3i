      SUBROUTINE SINTOP (IOPT,WORK)
num73(999999)
noindent
C     .  Copyright (C) 1989, California Institute of Technology.
C     .  All rights reserved.  U. S. Government sponsorship under
C     .  NASA contract NAS7-918 is acknowledged.
C>> 1994-11-14 SINTOP  Krogh  Declared all vars.
c>> 1994-10-19 SINTOP  Krogh  Changes to use M77CON
c>> 1994-08-15 SINTOP  Snyder corrected mixed types in MAX and MIN
c>> 1994-07-07 SINTOP  Snyder set up for CHGTYP.
C>> 1993-05-18 SINTOP  Krogh -- Changed "END" to "END PROGRAM"
c>> 1993-04-29 SINTOP  Krogh  Additions for Conversion to C.
C>> 1992-03-03 SINTOP  Krogh added error messages.
C>> 1991-09-20 SINTOP  Krogh converted '(1)' dimensioning to '(*)'.
C>> 1987-12-07 SINTOP Snyder  Initial code.
c
c--S replaces "?": ?INT, ?INT1, ?intc, ?intec, ?INTM, ?INTOP
C
C     ******************************************************************
C
C     THIS SUBROUTINE IS USED TO SPECIFY OPTIONS FOR SINT1 AND SINTM.
C     IT IS CALLED BY SINT1 AND SINTM.  IT MAY ALSO BE CALLED
C     BY THE USER DURING THE INTEGRATION TO CHANGE A RESTRICTED
C     SET OF THE OPTIONS.  IF IT IS CALLED WITH NFEVAL = 0, IT IS
C     ASSUMED THAT THE CALL CAME FROM SINT1 OR SINTM.  IN
C     THIS CASE, ALL OPTIONS ARE FIRST SET TO THEIR DEFAULT VALUES.
C     IF IT IS CALLED WITH NFEVAL .NE. 0, IT IS ASSUMED THAT THE
C     CALL CAME DIRECTLY FROM THE USER.  IN THIS CASE, ONLY A SUBSET
C     OF THE OPTIONS MAY BE CHANGED.  THE OPTIONS THAT MAY BE CHANGED
C     DO NOT REFER TO THE WORK VECTOR.  THUS WORK IS IN THIS CASE A
C     DUMMY ARGUMENT.  THE OPTIONS THAT MAY BE CHANGED CORRESPOND TO
C     NON-ZERO ELEMENTS OF THE VECTOR ICHG.
C     SEE SINT1 OR SINTM FOR A DESCRIPTION OF THE OPTIONS.
C
C     *****     FORMAL ARGUMENTS     ***********************************
C
C IOPT    IS THE OPTION VECTOR (SEE SINT1 OR SINTM).
      INTEGER IOPT(*)
C WORK    IS THE WORK VECTOR (SEE SINT1 OR SINTM).
      REAL             WORK(*)
C
C     *****     EXTERNAL REFERENCES     ********************************
C
C R1MACH  FETCHES MACHINE PARAMETERS.
      REAL             R1MACH
C
C     *****    LOCAL VARIABLES     *************************************
C
C ICHG    A VECTOR DEFINING WHICH OPTIONS MAY BE CHANGED WHEN NFEVAL
C         IS NON-ZERO.
      INTEGER ICHG(13)
C II JJ   INDICES.
      INTEGER II, JJ
C
C     *****    COMMON STORAGE ******************************************
C
include (sintc)
C
include (sintec)
C
C     *****    Statements for Processing Messages **********************
C
      INTEGER MENTXT, MEMDA1, MEMDA2, MERET, MEEMES, MEIVEC
      PARAMETER (MENTXT =23)
      PARAMETER (MEMDA1 =27)
      PARAMETER (MEMDA2 =28)
      PARAMETER (MERET  =51)
      PARAMETER (MEEMES =52)
      PARAMETER (MEIVEC =57)
      INTEGER MACT(11)
c     *********     Error message text     *****************************
c[Last 2 letters of Param. name]  [Text generating message.]
cAA SINT$B
cAB Last value is IOPT specfies bad option, IOPT(1:$M) = $B
cAC Option $M, can not be changed while integrating, IOPT(1:$M) = $B
      integer LTXTAA,LTXTAB,LTXTAC
      parameter (LTXTAA=  1,LTXTAB=  7,LTXTAC= 62)
      character MTXTAA(1) * (125)
      data MTXTAA/'SINT$BLast value is IOPT specfies bad option, IOPT(1:
     *$M) = $BOption $M, can not be changed while integrating, IOPT(1:$M
     *) = $B'/
C                      1 2      3  4      5  6 7 8      9 10   11
      DATA MACT / MEMDA1,0,MEMDA2, 0,MEEMES,77,4,0,MEIVEC,0,MERET /
C
C     *****    DATA STATEMENTS   ***************************************
C
      DATA ICHG /1,1,0,0,0,1,1,1,1,0,1,1,0/
indent
C
C     *****    PROCEDURES     ******************************************
C
C
C     SET OPTIONS TO DEFAULT VALUES.
C
      IOPT(1)=0
      IF (NFEVAL.EQ.0) THEN
         EMEPS = R1MACH(4)
         EMINF = R1MACH(2)
         ESMALL = 2.0 * MAX(R1MACH(1),1.0/EMINF)
         EDELM1 = ESMALL / EMEPS
         EDELM2 = 202.48
         EDELM3 = EMEPS * EDELM2
         EEPSM8 = 8.0 * EMEPS
         EMEPSX = 1.01 * EMEPS
         ENINF = 0.001 * EMINF
         ENZER = 50.0 * ESMALL
         ESQEPS = SQRT(EMEPS)
         ERSQEP = 1.0 / ESQEPS
         ERSQE6 = 0.001 * ERSQEP
         ESQ2EP = SQRT(ERSQEP)
         EPSO=0.0
         ERRINA=0.0
         ERRINB=0.0
         FEA=0
C        FER=EFERVL
C        EFERVL was EMEPS in single precision, and 8*EMEPS in double
         FER = EMEPS
         KMAXF=3
         NFINDX=0
         RELOBT=0.75
         RELTOL=0
         TALOC=0
         IF (NDIM.NE.1) THEN
            JPRINT=1
            DO 10 II=2,NDIM
10             JPRINT=10*JPRINT+1
            REVERM=0
            NFMAXM=0
            IXKDIM=1
         ELSE
            IPRINT=1
            REVERS=0
            NFMAX=0
         END IF
      END IF
C
C     SET OPTIONS SPECIFIED IN THE OPTION VECTOR.
C
      II=2
      DO BLOCK
         DO FOREVER
            JJ=IOPT(II)
            IF (JJ.EQ.0) EXIT FOREVER
            IF (JJ.LT.0 .OR. JJ.GT.13) THEN
               MACT(2) = II
               MACT(8) = LTXTAB
               EXIT BLOCK
            END IF
            IF (NFEVAL.NE.0) THEN
               IF (ICHG(JJ).EQ.0) THEN
                  MACT(2) = JJ
                  MACT(4) = II
                  MACT(8) = LTXTAC
                  EXIT BLOCK
               END IF
            END IF
            DO CASE (JJ,13)
            CASE 1
c                  No longer used.
            CASE 2
               IF (NDIM.EQ.1) THEN
                  IPRINT=IOPT(II+1)
               ELSE
                  JPRINT=IOPT(II+1)
                  IF (NFEVAL.NE.0) IPRINT=MOD(JPRINT/10**(KDIM-1),10)
               END IF
            CASE 3
               RELTOL=IOPT(II+1)
               EPSO=WORK(RELTOL)
               RELOBT=1.0e0-MAX(0.0e0,MIN(1.0e0,WORK(RELTOL+1)))
            CASE 4
               FEA=IOPT(II+1)
            CASE 5
               JJ=IOPT(II+1)
C              FER=MAX(EFERVL,WORK(JJ))
C           EFERVL was EMEPS in single precision, and 8*EMEPS in double
               FER=MAX(EMEPS,WORK(JJ))
            CASE 6
               REVERM=1
               REVERS=1
               II=II-1
            CASE 7
               KMAXF=MAX(3,MIN(8,IOPT(II+1)))
            CASE 8
            CASE 9
               NFMAXM=IOPT(II+1)
               NFMAX=NFMAXM
            CASE 10
               NFINDX=II+1
            CASE 11
               TALOC=IOPT(II+1)
            CASE 12
               ERRINA=WORK(IOPT(II+1))
               ERRINB=WORK(IOPT(II+1)+1)
            CASE 13
               IXKDIM=II+1
            END CASE
            II=II+2
         END FOREVER
         RETURN
      END BLOCK
      MACT(10) = II
      IOPT(1)=4
      CALL MESS(MACT, MTXTAA, IOPT)
      RETURN

C
      END PROGRAM
